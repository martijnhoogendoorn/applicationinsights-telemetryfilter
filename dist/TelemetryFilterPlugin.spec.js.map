{"version":3,"file":"TelemetryFilterPlugin.spec.js","sourceRoot":"","sources":["../src/TelemetryFilterPlugin.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { TelemetryItemCreator, RemoteDependencyData } from '@microsoft/applicationinsights-common';\r\nimport { IAppInsightsCore, ITelemetryItem } from \"@microsoft/applicationinsights-core-js\";\r\nimport { TelemetryFilterPlugin } from './applicationinsights-telemetryfilter';\r\nimport { Guid } from 'guid-typescript';\r\nimport { expect } from 'chai';\r\nimport 'mocha';\r\n\r\nconst goodTarget = 'https://reporting.somedomain.com/api/reports/clients/105659-7173/instances/108203-4dd8/documents/105203-e34a105203-19d9/info';\r\nconst msftDomain = 'https://www.microsoft.com/';\r\nconst testMethod = 'POST';\r\n\r\nfunction setupInitialTelemetry() : ITelemetryItem {\r\n  let remoteDependencyData = TelemetryItemCreator.create<RemoteDependencyData>(\r\n    new RemoteDependencyData(\r\n      null, \r\n      `|${Guid.create().toString().replace('-', '')}.${Guid.create().toString().replace('-', '').substring(0,16)}`,\r\n      `${goodTarget}`, // this gets parsed by AI into \r\n      `${testMethod} ${goodTarget}`,\r\n      10,\r\n      true, // success\r\n      200,\r\n      `${testMethod}`, // method\r\n      'Ajax',\r\n      null,\r\n      null, // properties (don't pass, any sanitizer makes a JSON string from it and we need the object)\r\n      null // measurements\r\n      ),\r\n    RemoteDependencyData.dataType,\r\n    `Microsoft.ApplicationInsights.${Guid.create().toString().replace('-', '')}`,\r\n    ({} as IAppInsightsCore).logger,\r\n    null, // customproperties,\r\n    null // systemproperties\r\n  );\r\n  \r\n  return remoteDependencyData;\r\n}\r\n\r\ndescribe('TelemetryFilter', () => {\r\n  const filteringPlugin = new TelemetryFilterPlugin();\r\n\r\n  it('Should remove Request-Id from captured headers', () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let inboundHeaders = { \r\n      requestHeaders: {\r\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.CGg60fQsuBdBheYYCX76Egj4AfStIz35qwQzfvlkl8A',\r\n        'Content-Type': 'application/text+xml',\r\n        'Request-Id': '|f87b17b2e0ff4da29c310faf937353bc.4113ec4e10154b32' \r\n      } \r\n    };\r\n    \r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredHeaders: {\r\n            'Request-Id': null,\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    remoteDependencyData.baseData.properties = inboundHeaders;\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n    filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n\r\n    expect(remoteDependencyData.baseData.properties).to.not.have.nested.property('Request-Id', 'nested property should be removed');\r\n  });\r\n\r\n  it(`Should replace Content-Type in captured headers with hardcoded 'application/json'`, () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let inboundHeaders = { \r\n      requestHeaders: {\r\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.CGg60fQsuBdBheYYCX76Egj4AfStIz35qwQzfvlkl8A',\r\n        'Content-Type': 'application/text+xml',\r\n        'Request-Id': '|f87b17b2e0ff4da29c310faf937353bc.4113ec4e10154b32' \r\n      } \r\n    };\r\n    \r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredHeaders: {\r\n            'Content-Type': [ 'application/json' ],\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    remoteDependencyData.baseData.properties = inboundHeaders;\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n    filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n\r\n    expect(remoteDependencyData.baseData.properties.requestHeaders).to.have.property('Content-Type', 'application/json', 'Content-Type should be replaced');\r\n  });\r\n\r\n  it('Should replace Authorization in captured headers with a regex replacement', () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let inboundHeaders = { \r\n      requestHeaders: {\r\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.CGg60fQsuBdBheYYCX76Egj4AfStIz35qwQzfvlkl8A',\r\n        'Content-Type': 'application/text+xml',\r\n        'Request-Id': '|f87b17b2e0ff4da29c310faf937353bc.4113ec4e10154b32' \r\n      } \r\n    };\r\n    \r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredHeaders: {\r\n            Authorization: [ /^(.*?) .*$/gi, '$1 **TOKEN REMOVED**' ],\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    remoteDependencyData.baseData.properties = inboundHeaders;\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n    filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n\r\n    expect(remoteDependencyData.baseData.properties.requestHeaders).to.have.property('Authorization', 'Bearer **TOKEN REMOVED**', 'Authorization should be replace with backreference');\r\n  });\r\n\r\n  it('Should have 2 captured headers remaining, both changed', () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let inboundHeaders = { \r\n      requestHeaders: {\r\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.CGg60fQsuBdBheYYCX76Egj4AfStIz35qwQzfvlkl8A',\r\n        'Content-Type': 'application/text+xml',\r\n        'Request-Id': '|f87b17b2e0ff4da29c310faf937353bc.4113ec4e10154b32' \r\n      } \r\n    };\r\n    \r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredHeaders: {\r\n            Authorization: [ /^(.*?) .*$/gi, '$1 **TOKEN REMOVED**' ],\r\n            'Content-Type': [ 'application/json' ],\r\n            'Request-Id': null,\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    remoteDependencyData.baseData.properties = inboundHeaders;\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n    filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n\r\n    expect(Object.keys(remoteDependencyData.baseData.properties.requestHeaders)).to.have.lengthOf(2);\r\n    expect(remoteDependencyData.baseData.properties.requestHeaders).to.have.property('Authorization', 'Bearer **TOKEN REMOVED**', 'Authorization should be replace with backreference');\r\n    expect(remoteDependencyData.baseData.properties.requestHeaders).to.have.property('Content-Type', 'application/json', 'Content-Type should be replaced');\r\n    expect(remoteDependencyData.baseData.properties).to.not.have.nested.property('Request-Id', 'nested property should be removed');\r\n  });\r\n\r\n  it(`Should throw RangeError when misconfigured  for 'name' property to remove unitary property (invalid for AI)`, () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredName: [ null ]\r\n        }\r\n      }\r\n    };\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n\r\n    expect(() => {\r\n      filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n    }).to.throw(RangeError);\r\n  });\r\n\r\n  it(`Should replace the URL in the 'name' property with hardcoded ${msftDomain}`, () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredName: [ `${msftDomain}` ]\r\n        }\r\n      }\r\n    };\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n    filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n\r\n    expect(remoteDependencyData.baseData.name).to.equal(msftDomain);\r\n  });\r\n\r\n  it(`Should replace the URL in the 'name' property with regular expression captured`, () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredName: [ /^(.*?) .*$/gi, '$1 **NAME URL REMOVED**' ]\r\n        }\r\n      }\r\n    };\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n    filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n\r\n    expect(remoteDependencyData.baseData.name).to.equal(`${testMethod} **NAME URL REMOVED**`);\r\n  });\r\n\r\n  it(`Should throw RangeError when misconfigured for 'data' property to remove unitary property (invalid for AI)`, () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredData: [ null ]\r\n        }\r\n      }\r\n    };\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n\r\n    expect(() => {\r\n      filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n    }).to.throw(RangeError);\r\n  });\r\n\r\n  it(`Should replace the URL in the 'data' property with hardcoded ${msftDomain}`, () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredData: [ `${msftDomain}` ]\r\n        }\r\n      }\r\n    };\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n    filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n\r\n    expect(remoteDependencyData.baseData.data).to.equal(msftDomain);\r\n  });\r\n\r\n  it(`Should replace the URL in the 'data' property with regular expression captured`, () => {\r\n\r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          filteredData: [ /^(.*?) .*$/gi, '$1 **DATA URL REMOVED**' ]\r\n        }\r\n      }\r\n    };\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n    filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n\r\n    expect(remoteDependencyData.baseData.data).to.equal(`${testMethod} **DATA URL REMOVED**`);\r\n  });\r\n\r\n  it(`Should remove potentially sensitive data from 'name' and 'data' property`, () => {\r\n    \r\n    let remoteDependencyData = setupInitialTelemetry();\r\n\r\n    let extensionConfig : any = { extensionConfig : {\r\n        [filteringPlugin.identifier]: {\r\n          //'https://reporting.somedomain.com/api/reports/clients/105659-7173/instances/108203-4dd8/documents/105203-e34a105203-19d9/info';\r\n          filteredName: [ /^(.*\\/clients\\/)[0-9]{6}-[0-9]{4}(\\/instances\\/)[0-9]{6}-[0-9a-z]{4}(\\/documents\\/)[0-9]{6}-[0-9a-z]{10}-[0-9a-z]{4}(\\/info)$/gi, '$1000000-0000$2000000-0000$3000000-0000000000-0000$4' ],\r\n          filteredData: [ /^(.*\\/clients\\/)[0-9]{6}-[0-9]{4}(\\/instances\\/)[0-9]{6}-[0-9a-z]{4}(\\/documents\\/)[0-9]{6}-[0-9a-z]{10}-[0-9a-z]{4}(\\/info)$/gi, '$1000000-0000$2000000-0000$3000000-0000000000-0000$4' ]\r\n        }\r\n      }\r\n    };\r\n\r\n    filteringPlugin.initialize(extensionConfig, null, null, null);\r\n    filteringPlugin.processTelemetry(remoteDependencyData, null);\r\n\r\n    expect(remoteDependencyData.baseData.name).to.equal(`${testMethod} https://reporting.somedomain.com/api/reports/clients/000000-0000/instances/000000-0000/documents/000000-0000000000-0000/info`);\r\n    expect(remoteDependencyData.baseData.data).to.equal(`${testMethod} https://reporting.somedomain.com/api/reports/clients/000000-0000/instances/000000-0000/documents/000000-0000000000-0000/info`);\r\n  });\r\n});"]}